#!/bin/bash

# Get a list of all .sif files in the folder /containers
sif_files=( $(find $HOME/containers -name "*.sif") )

echo "==============================================================================="
echo -e "   \033[1;36m __         _                                                    \033[0m"
echo -e "   \033[1;36m/ _\\  __ _ | |  ___   _ __ ___    ___    /\\/\\    ___   ___  __ _ \033[0m"
echo -e "   \033[1;36m\\ \\  / _\` || | / _ \\ | '_ \` _ \\  / _ \\  /    \\  / _ \\ / __|/ _\` |\033[0m"
echo -e "   \033[1;36m_\\ \\| (_| || || (_) || | | | | ||  __/ / /\\/\\ \\|  __/| (__| (_| |\033[0m"
echo -e "   \033[1;36m\\__/ \\__,_||_| \\___/ |_| |_| |_| \\___| \\/    \\/ \\___| \\___|\\__,_|\033[0m"
echo -e "   \033[1;36m                                                                 \033[0m"

# Check if there are any .sif files
if [ ${#sif_files[@]} -eq 0 ]; then
    echo "==============================================================================="
    echo -e "\033[1;31m[ ERROR   ]\033[0m No .sif files were found in $HOME/containers "
    echo "-------------------------------------------------------------------------------"
    echo -e "\033[1;36m[ SUGGEST ]\033[0m Please check the containers/README for more info"
    echo "            on how to run different Salome Meca versions"
    echo "-------------------------------------------------------------------------------"
    echo "[ INFO    ] With no SIF file added, it is only possible to run the 2022"
    echo "            version which is included in the distribution using the command"
    echo ""
    echo "            salome_meca"
    echo "==============================================================================="
    return 1
fi

# If there's only one .sif file, automatically select it
if [ ${#sif_files[@]} -eq 1 ]; then
    selected_file="${sif_files[0]}"
    echo "==============================================================================="
    echo "[ INFO    ] Found the following .sif file:"
    echo -e "            \033[1;36m${selected_file}\033[0m"
    echo "==============================================================================="
    # Now you can proceed with using the selected .sif file in your desired way
else
    # Display the list of .sif files with numbered options
    echo "==============================================================================="
    echo "[ INFO    ] Found several .sif files in /containers, that's great but which"
    echo "            shall I use to run Salome Meca ?"
    echo "-------------------------------------------------------------------------------"
    for i in "${!sif_files[@]}"; do
        echo -e "   \033[1;36m[$i] ${sif_files[$i]}\033[0m"
    done
    echo "==============================================================================="

    # Ask the user for their choice
    echo "Please make a choice..."
    read choice

    # Validate the user input
    if [[ ! "$choice" =~ ^[0-9]+$ ]] || [ "$choice" -lt 0 ] || [ "$choice" -ge ${#sif_files[@]} ]; then
        echo -e "\033[1;31m[ ERROR   ]\033[0m Invalid choice. Please enter a valid number."
        exit 1
    fi

    selected_file="${sif_files[$choice]}"

    echo "[ INFO    ] You have selected: $selected_file"
fi

_SM_SIF=$selected_file
_SINGULARITY_ARGS="-B /mnt/wslg"

# Check and bind drives in WSL
for drive in {a..z}; do
    if [ -d "/mnt/$drive" ]; then
        echo "[ INFO    ] Binding /mnt/$drive to /mnt/$drive"
        _SINGULARITY_ARGS="$_SINGULARITY_ARGS -B /mnt/$drive:/mnt/$drive"
    fi
done

export _SINGULARITY_ARGS
export _SM_SIF

return 0
